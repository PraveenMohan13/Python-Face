Majority Element
Given an array A of N elements. Find the majority element in the array. A majority element in an array A of size N is an element that appears more than N/2 times in the array.



Expected Time Complexity: O(N).

Expected Auxiliary Space: O(1).

 

Constraints:

1 <= N <= 107

0 <= Ai <= 106



Example 1:



Input:

N = 3 

A[] = {1,2,3} 

Output:

-1

Explanation:

Since each element in {1,2,3} appears only once so there is no majority element.



Example 2:



Input:

N = 5 

A[] = {3,1,3,3,2} 

Output:

3

Explanation:

Since 3 is present more than N/2 times, so it is the majority element.

Input (stdin)
1
3
1 2 3

Output (stdout)
-1

Input (stdin)
1
5
3 1 3 3 2

Output (stdout)
3


=============================================
tc = int(input())  # number of test case
for x in range(tc):
    n = int(input())      # list size
    l = [int(i) for i in input().split()]
    
    c = -1  # candidate for majority element
    v = 0   # vote count
    
    # Phase 1: Finding the candidate for majority element
    for i in range(n):
        if v == 0:
            c = l[i]
            v = 1
        elif l[i] == c:
            v += 1
        else:
            v -= 1
    
    # Phase 2: Verifying if the candidate is actually a majority element
    ans = 0
    for i in range(n):
        if c == l[i]:
            ans += 1
    
    if ans > n // 2:
        print(c)
    else:
        print(-1)
